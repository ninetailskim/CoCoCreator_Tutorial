{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","update","dt","Math","abs","x","audioEngine","playEffect"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        jumpHeight : 0,\r\n\r\n        jumpDuration: 0,\r\n\r\n        maxMoveSpeed: 0,\r\n\r\n        accel: 0,\r\n\r\n        jumpAudio:{\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },  \r\n    },\r\n\r\n    setJumpAction: function(){\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n\r\n        return cc.repeatForever(cc.sequence(jumpUp,jumpDown,callback));\r\n    },\r\n\r\n    setInputControl: function(){\r\n        var self = this;\r\n\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function(keyCode, event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n\r\n            onKeyReleased: function(keyCode, event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        },self.node);\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        this.jumpAction = this.setJumpAction();\r\n\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        \r\n        this.xSpeed = 0;\r\n\r\n        this.setInputControl();\r\n    },\r\n\r\n    update: function (dt) {\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            \r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        \r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n});\r\n"]}